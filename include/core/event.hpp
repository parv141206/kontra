/*****************************************************************//**
 * \file   event.hpp
 * \brief  It defines all sorts of events that can be generated by the user. This includes both keyboard and mouse events.
 * 
 * \author parv141206
 * \date   June 2025
 *********************************************************************/
#pragma once

/**
 * @brief It defines all sorts of events that can be generated by the user. This includes both keyboard and mouse events.
 */
enum class EventType {
    KEY_PRESS,
    KEY_ENTER,         
    KEY_BACKSPACE,     
    KEY_ESCAPE,        
    KEY_UP,     
    KEY_DOWN,   
    KEY_LEFT,   
    KEY_RIGHT,  
    MOUSE_SCROLL_UP,
    MOUSE_SCROLL_DOWN,
    MOUSE_PRESS, 
    QUIT,
    UNKNOWN
};

/**
 * @brief Represents a user input event containing type and optional metadata.
 * 
 * Use this to handle all forms of user input in a unified way, including
 * key presses and mouse interactions.
 * 
 * Example:
 * ```cpp
 * if (event.type == EventType::KEY_PRESS && event.key == 'q') {
 *     should_quit = true;
 * }
 * ```
 */
struct InputEvent {
    EventType type = EventType::UNKNOWN;
    char key = 0;      
    int mouse_x = -1;  
    int mouse_y = -1;  
};
